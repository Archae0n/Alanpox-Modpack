namespace = ef_flavour

# Yearly repeating hidden event to trigger these.
planet_event = {
	id = ef_flavour.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Don't waste events on empty ecus for whatever reason.
		if = {
			limit = { is_colony = yes }
			random_list = {
				95 = { } # Approximately a new event every 20 years or so. (Ideally)
				5 = {
					random_list = {
						1 = { planet_event = { id = ef_flavour.10 }}
						1 = { planet_event = { id = ef_flavour.20 }}
						1 = { planet_event = { id = ef_flavour.30 }}
						1 = { planet_event = { id = ef_flavour.40 }}
						1 = { planet_event = { id = ef_flavour.50 }}
						1 = { planet_event = { id = ef_flavour.60 }}
					}
				}
			}
			# TODO: consider revisiting how we do this, it's inconsistent
			switch = {
				trigger = has_planet_flag
				# Diplo events
				ef_diplomacy_specialisation = {
					# This has its own gatekeeper event
					planet_event = { id = ef_diplo.10 }
				}
				# Industry events
				# At the moment (15/06/2024) all the industry content is in the situation
				ef_industry_specialisation = {
					random_list = {
						95 = { } # Approximately a new event every 20 years or so. (Ideally)
						5 = {
							random_list = {
								1 = { planet_event = { id = ef_industry.20 }}
								1 = { planet_event = { id = ef_industry.30 }}
								1 = { planet_event = { id = ef_industry.40 }}
							}
						}
					}
				}
				# Trade events
				ef_trade_specialisation = {
					# Stock market events
					random_list = {
						80 = { } # Approximately a new event every 5 years or so. (Ideally)
						20 = {
							random_list = {
								10 = { planet_event = { id = ef_trade.10 }}
								10 = { planet_event = { id = ef_trade.15 }}
							}
						}
					}
					# Flavour events
					random_list = {
						95 = { } # Approximately a new event every 20 years or so. (Ideally)
						5 = {
							random_list = {
								1 = { planet_event = { id = ef_trade.20 }}
								1 = { planet_event = { id = ef_trade.30 }}
								1 = { planet_event = { id = ef_trade.40 }}
								1 = { planet_event = { id = ef_trade.60 }}
								1 = { planet_event = { id = ef_trade.70 }}
							}
						}
					}
				}
			}
		}
		# Loop the event
		planet_event = { id = ef_flavour.0 days = 360 }
		# Planet specialisations become available
		random_list = {
			# ~1 in 20 chance of firing
			95 = { }
			# This only needs to fire once, if it fires again it will have no effect
			5 = { planet_event = { id = ef_path.0 } }
		}
	}

}

# Check if a planet has changed to become a city world and apply the flavour modifier. I don't really care if we double apply it.
planet_event = {
	id = ef_flavour.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { ef_is_ecu = yes }
			ef_add_ecu_terraformed_modifiers = yes
			planet_event = { id = ef_flavour.0 days = 360}
		}
	}
}

event = {
	id = ef_flavour.2
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = { set_global_flag = city_world_flavour }
}

# Deep Levels Survey
planet_event = {
	id = ef_flavour.10
	title = ef_flavour.10.name
	desc = "ef_flavour.10.desc"
	picture  = GFX_evt_city_planet
	location = root
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = ef_deep_levels_survey_has_happened
			}
		}
		OR = {
			has_modifier = ef_deep_levels_1
			has_modifier = ef_deep_levels_2
			has_modifier = ef_deep_levels_3
			has_modifier = ef_deep_levels_4
			has_modifier = ef_deep_levels_5
		}
	}

	immediate = {
		owner = { set_country_flag =ef_deep_levels_survey_has_happened }
	}

	option = {
		name = ef_flavour.10.a
        allow = {
			owner = {
				resource_stockpile_compare = { resource = influence value >= 50 }
			}
		}
		owner = {
			add_resource = { influence = -50 }
		}

		hidden_effect = {
            random_list = {
                10 = { planet_event = { id = ef_flavour.11 days = 180 }} # New levels found
                10 = { planet_event = { id = ef_flavour.12 days = 180 }} # Party wipe
                10 = { planet_event = { id = ef_flavour.13 days = 180 }} # Tunnels cut off
            }
        }
	}
    option = {
		name = ef_flavour.10.b
	}
}

# Deep Levels follow up option A: New levels discovered.
planet_event = {
	id = ef_flavour.11
	title = ef_flavour.11.name
	desc = "ef_flavour.11.desc"
	picture  = GFX_evt_news_room
	location = root
	is_triggered_only = yes

	option = {
		name = ef_flavour.11.a
        create_pop = {
			species = this.owner_main_species
			ethos = random
		}
		create_pop = {
			species = this.owner_main_species
			ethos = random
		}
	}
}

# Deep Levels follow up option B: Party Wipe
planet_event = {
	id = ef_flavour.12
	title = ef_flavour.12.name
	desc = "ef_flavour.12.desc"
	picture  = GFX_evt_dark_alley
	location = root
	is_triggered_only = yes

	option = {
		name = ef_flavour.12.a
	}
}

# Deep Levels follow up option C: Tunnels cut off
planet_event = {
	id = ef_flavour.13
	title = ef_flavour.13.name
	desc = "ef_flavour.13.desc"
	picture  = GFX_evt_collapsing_roof
	location = root
	is_triggered_only = yes

    immediate = {
        add_planet_devastation = 10
		random_owned_pop = {
			limit = { is_pop_category = ef_undercity}
			kill_pop = yes
		}
    }

	option = {
		name = ef_flavour.13.a
	}
}

# Freighter Accident
planet_event = {
	id = ef_flavour.20
	title = ef_flavour.20.name
	desc = "ef_flavour.20.desc"
	picture  = GFX_evt_debris
	location = root
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = ef_freighter_crash_has_happened
			}
		}
	}

	immediate = {
		owner = { set_country_flag = ef_freighter_crash_has_happened }
		random_list = {
			75 = { planet_event = { id = ef_flavour.21 days = 720 }} # Mutants
			25 = { planet_event = { id = ef_flavour.22 days = 720 }} # Psionics
		}

	}

	option = {
		name = ef_flavour.20.a

		add_planet_devastation = 10
		random_owned_pop = {
			limit = { always = yes}
			kill_pop = yes
		}
	}
}

# Mutants Emerge
planet_event = {
	id = ef_flavour.21
	title = ef_flavour.21.name
	desc = "ef_flavour.21.desc"
	picture  = GFX_evt_spy_network
	location = root
	is_triggered_only = yes

	# TODO: Add xenophobe/auth options to eradicate them
	option = {
		name = ef_flavour.21.a
		while = {
			count = 5
			random_owned_pop = {
				limit = {
					is_same_species = ROOT
					OR = {
						is_pop_category = worker
						is_pop_category = ef_undercity
					}
				}
				modify_species = {
					add_trait = trait_ef_mutant
				}
			}
		}
	}
}

# Psionics Emerge
planet_event = {
	id = ef_flavour.22
	title = ef_flavour.22.name
	desc = "ef_flavour.22.desc"
	picture  = GFX_evt_metropolis
	location = root
	is_triggered_only = yes

	option = {
		name = ef_flavour.22.a
		while = {
			count = 5
			random_owned_pop = {
				limit = {
					is_same_species = ROOT
					OR = {
						is_pop_category = worker
						is_pop_category = ef_undercity
					}
				}
				modify_species = {
					add_trait = trait_latent_psionic
				}
			}
		}
	}

	option = {
		name = ef_flavour.22.b
		allow = {
			owner = {
				NOR = {
					has_ethic = ethic_egalitarian
					has_ethic = ethic_fanatic_egalitarian
				}
			}
		}
		while = {
			count = 5
			random_owned_pop = {
				limit = {
					is_same_species = ROOT
					OR = {
						is_pop_category = worker
						is_pop_category = ef_undercity
					}
				}
				kill_pop = yes
			}
		}
		owner = {
			add_resource = { society_research = 5000 }
			add_tech_progress = { tech = tech_psionic_theory progress = 0.25}
		}
	}
}

# Escaped Primitive Slaves
planet_event = {
	id = ef_flavour.30
	title = ef_flavour.30.name
	desc = "ef_flavour.30.desc"
	picture  = GFX_evt_gunrunning
	location = root
	is_triggered_only = yes

	# This shouldn't fire if there are no primitives to raid
	trigger = {
		AND = {
			any_country = {
				is_primitive = yes
			}
			owner = {
				NOT = {
					has_country_flag = ef_escaped_primitives_has_happened
				}
			}
		}
	}

	immediate = {
		owner = { set_country_flag = ef_escaped_primitives_has_happened}
		random_country = {
			limit = { is_primitive = yes }
			save_event_target_as = ef_primitive_origin_country
			species = {
				save_event_target_as = ef_primitive_species
			}
		}
	}

	option = {
		name = ef_flavour.30.a
		create_pop = {
			species = event_target:ef_primitive_species
			ethos = { ethic = ethic_egalitarian }
		}
		create_pop = {
			species = event_target:ef_primitive_species
			ethos = { ethic = ethic_xenophobe }
		}
		create_pop = {
			species = event_target:ef_primitive_species
			ethos = { ethic = ethic_materialist }
		}
	}
	option = {
		name = ef_flavour.30.b
		event_target:ef_primitive_origin_country = {
			go_to_next_pre_ftl_age = yes
			set_awareness = 100
		}
	}
}

# Financial Hub
planet_event = {
	id = ef_flavour.40
	title = ef_flavour.40.name
	desc = "ef_flavour.40.desc"
	picture  = GFX_evt_bribery
	location = root
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = ef_financial_hub_has_happened
			}
		}
	}

	immediate = {
		owner = { set_country_flag = ef_financial_hub_has_happened }
	}

	option = {
		name = ef_flavour.40.a
		add_modifier = { modifier = ef_financial_hub }
	}
}
# Universal Marketplace
planet_event = {
	id = ef_flavour.50
	title = ef_flavour.50.name
	desc = "ef_flavour.50.desc"
	picture  = GFX_evt_black_market
	location = root
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = ef_universal_marketplace_has_happened
			}
		}
	}

	immediate = {
		owner = { set_country_flag = ef_universal_marketplace_has_happened }
	}

	option = {
		name = ef_flavour.50.a
		add_modifier = { modifier = ef_marketplace }
	}
	option = {
		name = ef_flavour.50.b
	}
}

# Illegal AI Core
planet_event = {
	id = ef_flavour.60
	title = ef_flavour.60.name
	desc = "ef_flavour.60.desc"
	picture  = GFX_evt_glitchy_matrix
	location = root
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = ef_illegal_ai_core_has_happened
			}
		}
	}
	immediate = {
		owner = { set_country_flag = ef_illegal_ai_core_has_happened }
	}

	# Investigate
	option = {
		name = ef_flavour.60.a
        allow = {
			owner = {
				resource_stockpile_compare = { resource = influence value >= 50 }
			}
		}
		owner = {
			add_resource = { influence = -50 }
		}
		add_modifier = { modifier = ef_glitchy_machines days = 270 }
		hidden_effect = {
			planet_event = {
				id = ef_flavour.61
				days = 270
			}
		}
	}
	# Ignore (leads to a bad event  in a few months)
	option = {
		name = ef_flavour.60.b
		add_modifier = { modifier = ef_glitchy_machines days = 270 }
		hidden_effect = {
			planet_event = {
				id = ef_flavour.62
				days = 270
			}
		}
	}
}

# Bad outcome
planet_event = {
	id = ef_flavour.61
	title = ef_flavour.61.name
	desc = "ef_flavour.61.desc"
	picture  = GFX_evt_glitchy_matrix
	location = root
	is_triggered_only = yes

	immediate = {
		add_planet_devastation = 10
		add_modifier = { modifier = ef_glitchy_machines days = 1800 }
	}

	option = {
		name = ef_flavour.61.a
	}
}

# Investigation conclusion
planet_event = {
	id = ef_flavour.62
	title = ef_flavour.62.name
	desc = "ef_flavour.62.desc"
	picture  = GFX_evt_glitchy_matrix
	location = root
	is_triggered_only = yes

	# Scrap it
	option = {
		name = ef_flavour.62.a
		owner = {
			add_resource = { alloys = 1000 }
		}

	}
	# Use it
	option = {
		name = ef_flavour.62.b
		add_modifier = { modifier = ef_ai_insight years = 30 }
	}
}

# Property bought up by rivals
# TODO
#planet_event = {
#	id = ef_flavour.70
#	title = ef_flavour.70.name
#	desc = "ef_flavour.70.desc"
#	picture  = GFX_evt_bribery
#	location = root
#	is_triggered_only = yes
#
#	# Scrap it
#	option = {
#		name = ef_flavour.70.a
#		owner = {
#			add_resource = { alloys = 1000 }
#		}
#
#	}
#	# Use it
#	option = {
#		name = ef_flavour.70.b
#	}
#}

# Archaeological Dig # TODO
#planet_event = {
#	id = ef_flavour.1
#	title = ef_flavour.1.name
#	desc = "ef_flavour.1.desc"
#	picture  = GFX_evt_archaeological_dig
#	location = root
#	is_triggered_only = yes


#	option = {
#		name = ef_flavour.1.a
#		# pass
#	}
#}